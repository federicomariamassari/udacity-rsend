<?xml version="1.0" encoding="UTF-8"?>

<launch>

  <!-- Fine-tuning was done via rqt_reconfigure, mostly according to [4] and [5].
  
  Resources used on parameters tuning:

  Papers:
    [1] Zheng, Kaiyu: "ROS Navigation Tuning Guide" (2019 revision)
    [2] McLeod, Haidyn: "ROS Localization and Navigation using Gazebo" (2018)
  
  Tutorials:
    [3] http://wiki.ros.org/amcl?distro=noetic
    [4] http://wiki.ros.org/costmap_2d?distro=noetic
    [5] https://www.theconstructsim.com/ros-qa-168-what-are-the-differences-between-global-and-local-costmap/
    [6] https://www.theconstructsim.com/ros-qa-137-how-to-tune-navigational-parameters-using-a-graphical-tool/

  Repositories:
    [a] McLeod, Haidyn: https://github.com/Heych88/skid_steer_bot
    
  In addition, Udacity Knowledge Q&A proved very helpful throughout the project.
  -->

  <!-- Map Server -->
  <arg name="map_file" default="$(find my_robot)/maps/map.yaml"/>
  <node name="map_server" pkg="map_server" type="map_server" args="$(arg map_file)"/>

  <!-- AMCL Node -->
  <node name="amcl" pkg="amcl" type="amcl" output="screen">
    <remap from="scan" to="/scan"/>

    <param name="odom_frame_id" value="odom"/>

    <!-- Adopted for skid-steer robots [2] -->
    <param name="odom_model_type" value="diff"/>

    <param name="base_frame_id" value="robot_footprint"/>
    <param name="global_frame_id" value="map"/>

    <param name="initial_pose_x" value="0"/>
    <param name="initial_pose_y" value="0"/>

    <!-- Rotate initial pose mean (yaw) 90° clockwise (-π/2 radians) to align with map -->
    <param name="initial_pose_a" value="-1.570796"/>

    <!-- Overall filter parameters -->
    <param name="min_particles" value="500"/>  <!-- To reduce computational burden once robot is localized -->
    <param name="max_particles" value="5000"/>

    <!-- Assume kernel density estimation of odometry data is fairly reliable [1] -->
    <param name="kld_err" value="0.01"/>
    <param name="kld_z" value="0.99"/>

    <!-- Minimum translational and rotational distances travelled before triggering parameters update -->
    <param name="update_min_d" value="0.05"/>  <!-- 5 cm -->
    <param name="update_min_a" value="0.1309"/>  <!-- π/24 radians -->

    <!-- Suggested values [3] to enable recovery mode -->
    <param name="recovery_alpha_slow" value="0.001"/>
    <param name="recovery_alpha_fast" value="0.1"/>

    <!-- Laser model parameters -->

    <!-- 120 was found to be the most stable in terms  -->
    <param name="laser_max_beams" value="120"/>

    <param name="laser_z_hit" value="0.95"/>
    <param name="laser_z_rand" value="0.05"/>
    <param name="laser_likelihood_max_dist" value="4.0"/>

    <!-- Odometry model parameters -->

    <!-- Reduce default odom_alpha* parameters to assume low noise in odometry [1]. -->
    <param name="odom_alpha1" value="0.05"/>
    <param name="odom_alpha2" value="0.05"/>
    <param name="odom_alpha3" value="0.05"/>
    <param name="odom_alpha4" value="0.05"/>

  </node>

  <!-- Move Base -->  
  <node name="move_base" pkg="move_base" type="move_base" respawn="false" output="screen">
    <remap from="scan" to="/scan"/>

    <param name="base_global_planner" value="navfn/NavfnROS"/>
    <param name="base_local_planner" value="base_local_planner/TrajectoryPlannerROS"/>

    <param name="controller_frequency" value="10.0"/> <!-- 10Hz -->

    <rosparam file="$(find my_robot)/config/costmap_common_params.yaml" command="load" ns="global_costmap"/>
    <rosparam file="$(find my_robot)/config/costmap_common_params.yaml" command="load" ns="local_costmap"/>
    <rosparam file="$(find my_robot)/config/local_costmap_params.yaml" command="load"/>
    <rosparam file="$(find my_robot)/config/global_costmap_params.yaml" command="load"/>
    <rosparam file="$(find my_robot)/config/base_local_planner_params.yaml" command="load"/>

  </node>

</launch>
