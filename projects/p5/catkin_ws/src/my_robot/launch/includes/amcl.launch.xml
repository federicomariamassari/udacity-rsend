<launch>

  <!-- Fine-tuning of parameters as per Project 3 ("Where Am I?")

  Modified from: https://github.com/turtlebot/turtlebot_apps/blob/indigo/turtlebot_navigation/launch/includes/amcl/amcl.launch.xml

  Papers:
    [1] Zheng, Kaiyu: "ROS Navigation Tuning Guide" (2019 revision)
    [2] McLeod, Haidyn: "ROS Localization and Navigation using Gazebo" (2018)

  Tutorials and Wikis:
    [3] http://wiki.ros.org/amcl?distro=noetic
    
  (*) Extra parameters from turtlebot_apps/amcl_demo.launch file

  -->

  <!-- Map is instead provided by Move Base node -->
  <arg name="use_map_topic" default="false"/>

  <arg name="initial_pose_x" default="0.0"/>
  <arg name="initial_pose_y" default="0.0"/>

  <!-- No need to rotate robot's initial pose (yaw) with gmapping-created map -->
  <arg name="initial_pose_a" default="0.0"/>

  <arg name="odom_frame_id" default="odom"/>
  <arg name="base_frame_id" default="robot_footprint"/>
  <arg name="global_frame_id" default="map"/>
  <arg name="scan_topic" default="/scan"/>

  <!-- AMCL Node -->
  <node pkg="amcl" type="amcl" name="amcl">

    <param name="use_map_topic" value="$(arg use_map_topic)"/>

    <param name="initial_pose_x" value="$(arg initial_pose_x)"/>
    <param name="initial_pose_y" value="$(arg initial_pose_y)"/>
    <param name="initial_pose_a" value="$(arg initial_pose_a)"/>

    <param name="odom_frame_id" value="$(arg odom_frame_id)"/> 
    <param name="base_frame_id" value="$(arg base_frame_id)"/> 
    <param name="global_frame_id" value="$(arg global_frame_id)"/>

    <remap from="scan" to="$(arg scan_topic)"/>

    <!-- Adopted for skid-steer robots [2] -->
    <param name="odom_model_type" value="diff"/>

    <!-- Publish scans from best pose at a max of 10 Hz (*) -->
    <param name="gui_publish_rate" value="10.0"/>

    <!-- Overall filter parameters -->
    <param name="min_particles" value="500"/>  <!-- To reduce computational burden once robot is localized -->
    <param name="max_particles" value="5000"/>
    
    <!-- Assume kernel density estimation of odometry data is fairly reliable [1] -->
    <param name="kld_err" value="0.01"/>
    <param name="kld_z" value="0.99"/>    

    <!-- Minimum translational and rotational distances travelled before triggering parameters update -->
    <param name="update_min_d" value="0.05"/>  <!-- 5 cm -->
    <param name="update_min_a" value="0.1309"/>  <!-- Ï€/24 radians -->

    <!-- Suggested values [3] to enable recovery mode -->
    <param name="recovery_alpha_slow" value="0.001"/>
    <param name="recovery_alpha_fast" value="0.1"/>

    <!-- Laser model parameters -->

    <!-- Empirically, 120 was found to be the most stable value (Project 3) -->
    <param name="laser_max_beams" value="120"/>
    <param name="laser_max_range" value="12.0"/>  <!-- (*) -->

    <!-- Additional laser parameters are ignored with likelihood field [3] -->
    <param name="laser_model_type" value="likelihood_field"/>
    <param name="laser_z_hit" value="0.95"/>
    <param name="laser_z_rand" value="0.05"/>
    <param name="laser_likelihood_max_dist" value="4.0"/>

    <!-- Odometry model parameters -->

    <!-- Reduce default odom_alpha* parameters to assume low noise in odometry [1]. -->
    <param name="odom_alpha1" value="0.005"/>
    <param name="odom_alpha2" value="0.005"/>
    <param name="odom_alpha3" value="0.005"/>
    <param name="odom_alpha4" value="0.005"/>

    <!-- Increase tolerance because the computer can get quite busy (*) -->
    <param name="transform_tolerance" value="1.0"/>

  </node>
</launch>
